#!/bin/bash

# –ö–æ–ª—å–æ—Ä–∏
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

show_logo() {
  clear
  echo -e "${BLUE}"
  echo -e '‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó'
  echo -e '‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù'
  echo -e '‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó'
  echo -e '‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë'
  echo -e '‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë'
  echo -e '‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù'
  echo -e "${NC}"
  echo -e "\n–ü—ñ–¥—Ç—Ä–∏–º–∞–π—Ç–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –ø—Ä–æ—î–∫—Ç DEKOS [üá∫üá¶]"
  echo -e "Telegram: ${BLUE}https://t.me/indusUA${NC}\n"
}

check_ports() {
  local ports=("4001" "11434")
  local busy_ports=()
  
  for port in "${ports[@]}"; do
    if lsof -i :"$port" >/dev/null; then
      busy_ports+=("$port")
    fi
  done
  
  if [ ${#busy_ports[@]} -gt 0 ]; then
    echo -e "${RED}–ü–æ–º–∏–ª–∫–∞: –ù–∞—Å—Ç—É–ø–Ω—ñ –ø–æ—Ä—Ç–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è: ${busy_ports[*]}${NC}"
    return 1
  fi
  return 0
}

install_dependencies() {
  echo -e "\n${YELLOW}üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...${NC}"
  sudo apt update && sudo apt upgrade -y
  sudo apt install -y wget curl git jq lsof screen unzip
}

install_ollama() {
  echo -e "\n${YELLOW}ü§ñ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Ollama...${NC}"
  curl -fsSL https://ollama.com/install.sh | sh
  sudo systemctl enable ollama
  sudo systemctl start ollama
}

install_dria() {
  echo -e "\n${YELLOW}‚ö° –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Dria Launcher...${NC}"
  curl -fsSL https://dria.co/launcher | bash
  echo 'export PATH=$PATH:$HOME/.dria/bin' >> ~/.bashrc
  source ~/.bashrc
}

install_node() {
  echo -e "\n${BLUE}===[ –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ù–û–î–ò DEKOS ]===${NC}"
  
  if ! check_ports; then
    return 1
  fi
  
  install_dependencies
  install_ollama
  install_dria
  
  echo -e "\n${GREEN}‚úÖ –ù–æ–¥–∞ DEKOS —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
  echo -e "–í–∏–∫–æ–Ω–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: ${BLUE}source ~/.bashrc${NC} –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω–∞–ª"
}

start_node() {
  echo -e "\n${BLUE}===[ –ó–ê–ü–£–°–ö –ù–û–î–ò DEKOS ]===${NC}"
  
  if ! command -v dkn-compute-launcher >/dev/null; then
    echo -e "${RED}–ü–æ–º–∏–ª–∫–∞: –°–ø–æ—á–∞—Ç–∫—É –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –Ω–æ–¥—É!${NC}"
    return 1
  fi

  if screen -list | grep -q "dekos_node"; then
    echo -e "${YELLOW}‚ÑπÔ∏è –ù–æ–¥–∞ DEKOS –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
    return 0
  fi

  screen -dmS dekos_node bash -c 'dkn-compute-launcher start > ~/.dekos.log 2>&1'
  
  echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ DEKOS –∑–∞–ø—É—â–µ–Ω–∞ —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ${NC}"
  echo -e "–õ–æ–≥–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É: ${BLUE}~/.dekos.log${NC}"
  echo -e "–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤: ${BLUE}tail -f ~/.dekos.log${NC}"
}

stop_node() {
  echo -e "\n${BLUE}===[ –ó–£–ü–ò–ù–ö–ê –ù–û–î–ò DEKOS ]===${NC}"
  
  if screen -list | grep -q "dekos_node"; then
    screen -ls | grep dekos_node | cut -d. -f1 | xargs kill
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ DEKOS —É—Å–ø—ñ—à–Ω–æ –∑—É–ø–∏–Ω–µ–Ω–∞${NC}"
  else
    echo -e "${YELLOW}‚ÑπÔ∏è –ù–æ–¥–∞ DEKOS –Ω–µ –±—É–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
  fi
}

node_status() {
  echo -e "\n${BLUE}===[ –°–¢–ê–¢–£–° –ù–û–î–ò DEKOS ]===${NC}"
  
  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Ollama
  if systemctl is-active --quiet ollama; then
    echo -e "ü§ñ Ollama: ${GREEN}–∞–∫—Ç–∏–≤–Ω–∞${NC}"
  else
    echo -e "ü§ñ Ollama: ${RED}–Ω–µ –∞–∫—Ç–∏–≤–Ω–∞${NC}"
  fi

  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Dria
  if command -v dkn-compute-launcher >/dev/null; then
    echo -e "‚ö° Dria Launcher: ${GREEN}–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
  else
    echo -e "‚ö° Dria Launcher: ${RED}–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
  fi

  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤
  if screen -list | grep -q "dekos_node"; then
    echo -e "üü¢ –ù–æ–¥–∞ DEKOS: ${GREEN}–ø—Ä–∞—Ü—é—î${NC}"
    echo -e "\n–û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:"
    tail -n 5 ~/.dekos.log 2>/dev/null || echo "–õ–æ–≥–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ"
  else
    echo -e "üî¥ –ù–æ–¥–∞ DEKOS: ${RED}–Ω–µ –∞–∫—Ç–∏–≤–Ω–∞${NC}"
  fi
}

update_node() {
  echo -e "\n${BLUE}===[ –û–ù–û–í–õ–ï–ù–ù–Ø –ù–û–î–ò DEKOS ]===${NC}"
  
  if command -v dkn-compute-launcher >/dev/null; then
    curl -fsSL https://dria.co/launcher | bash
    echo -e "${GREEN}‚úÖ Dria Launcher –æ–Ω–æ–≤–ª–µ–Ω–æ${NC}"
  else
    echo -e "${RED}–ü–æ–º–∏–ª–∫–∞: Dria Launcher –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!${NC}"
  fi
  
  if command -v ollama >/dev/null; then
    sudo systemctl stop ollama
    curl -fsSL https://ollama.com/install.sh | sh
    sudo systemctl start ollama
    echo -e "${GREEN}‚úÖ Ollama –æ–Ω–æ–≤–ª–µ–Ω–æ${NC}"
  else
    echo -e "${RED}–ü–æ–º–∏–ª–∫–∞: Ollama –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!${NC}"
  fi
}

remove_node() {
  echo -e "\n${BLUE}===[ –í–ò–î–ê–õ–ï–ù–ù–Ø –ù–û–î–ò DEKOS ]===${NC}"
  
  stop_node
  
  if command -v dkn-compute-launcher >/dev/null; then
    dkn-compute-launcher uninstall
    rm -rf ~/.dria
    echo -e "${GREEN}‚úÖ Dria Launcher –≤–∏–¥–∞–ª–µ–Ω–æ${NC}"
  fi
  
  if command -v ollama >/dev/null; then
    sudo systemctl stop ollama
    sudo rm -rf /usr/local/bin/ollama ~/.ollama
    echo -e "${GREEN}‚úÖ Ollama –≤–∏–¥–∞–ª–µ–Ω–æ${NC}"
  fi
  
  echo -e "\n${GREEN}‚úÖ –ù–æ–¥—É DEKOS —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ${NC}"
}

show_menu() {
  show_logo
  echo -e "\n${BLUE}–ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è –Ω–æ–¥–æ—é DEKOS:${NC}"
  echo "1. üì• –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É"
  echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É"
  echo "3. ‚èπÔ∏è –ó—É–ø–∏–Ω–∏—Ç–∏ –Ω–æ–¥—É"
  echo "4. üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å"
  echo "5. üîÑ –û–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É"
  echo "6. üõë –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É"
  echo "7. ‚ùå –í–∏–π—Ç–∏"
  echo -ne "\n–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é [1-7]: "
}

while true; do
  show_menu
  read -r choice
  
  case $choice in
    1) install_node ;;
    2) start_node ;;
    3) stop_node ;;
    4) node_status ;;
    5) update_node ;;
    6) remove_node ;;
    7) exit 0 ;;
    *) echo -e "\n${RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.${NC}" ;;
  esac
  
  echo -ne "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è..."
  read -r
done
